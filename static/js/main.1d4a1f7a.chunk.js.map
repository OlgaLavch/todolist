{"version":3,"sources":["UI/TodoListTask/TodoListTask.jsx","UI/TodoListTasks.jsx","UI/TodoListFooter.jsx","UI/TodoListTitle.jsx","UI/addNewItemForm.jsx","BLL/reducer.js","UI/TodoList.jsx","UI/App.jsx","serviceWorker.js","BLL/store.jsx","index.js"],"names":["TodoListTask","_ref","task","changeStatus","todoListId","changeTitle","deleteTask","_useState","useState","_useState2","Object","slicedToArray","activeMode","setActiveMode","_useState3","title","_useState4","newTitle","setNewTitle","onTitleChanged","e","currentTarget","value","id","classForIsDone","isDone","console","log","react_default","a","createElement","className","type","onChange","checked","onDoubleClick","autoFocus","onBlur","onKeyPress","key","onClick","TodoListTasks","tasks","tasksElements","map","t","UI_TodoListTask_TodoListTask","TodoListFooter","filterValue","setFilterValue","isHidden","setIsHidden","classForAll","classForCompleted","classForActive","Fragment","TodoListTitle","deleteTodolist","AddNewItemForm","addItem","error","setError","titleValue","setTitleValue","onAddItemClick","trim","placeholder","initialState","todolists","reducer","state","arguments","length","undefined","action","todoLists","newState","todo","objectSpread2","newTodoList","concat","toConsumableArray","tl","todolistId","newTask","taskId","obj","filter","ConnectedTodoList","connect","dispatch","setTasks","setTasksAC","addNewTask","addNewTaskAC","updateTask","updateTaskAC","deleteTaskAC","nextTaskId","setNextTaskId","useEffect","restoreState","saveState","stateAsString","JSON","stringify","localStorage","setItem","getItem","parse","forEach","changeTask","UI_TodoListTitle","addNewItemForm","priority","UI_TodoListTasks","UI_TodoListFooter","ConnectedApp","setTodolists","setTodolistsAC","addNewTodoList","addTodolistAC","nextTodoListId","setNextTodoListId","UI_TodoList","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_UI_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d4a1f7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport  './TodolistTask.css';\n\nconst TodoListTask = ({ task, changeStatus, todoListId, changeTitle, deleteTask }) => {\n    const [activeMode, setActiveMode] = useState(false)\n    const [newTitle, setNewTitle] = useState(task.title)\n    const onIsDoneChange = (e) => {\n        changeStatus(task.id, e.currentTarget.checked)\n    }\n    const onTitleChanged = (e) => {\n        let title = e.currentTarget.value\n        changeTitle(task.id, title)\n        setActiveMode(false)\n    }\n    const deleteTAsk = () => {\n        deleteTask(todoListId, task.id)\n    }\n    const classForIsDone = task.isDone ? 'todoListTaskDone' : 'todoListTask'\n    console.log(classForIsDone)\n    return (\n            <div className={classForIsDone}>\n                <input type=\"checkbox\" onChange={onIsDoneChange} checked={task.isDone} />\n                <span>{task.id + ' - '}</span>\n                {!activeMode &&\n                    <span className={'tasksDeleteButton'}>\n                        <span onDoubleClick={() => setActiveMode(true)}>{task.title}</span>\n\n                    </span>\n                }\n                {\n                    activeMode && <input autoFocus={true} onBlur={onTitleChanged}\n                        value={newTitle}\n                        onKeyPress={(e) => { return (e.key === \"Enter\") ? onTitleChanged(e) : null }}\n                        onChange={(e) => setNewTitle(e.currentTarget.value)} />\n                }\n                <button onClick={deleteTAsk}>X</button>\n            </div>\n    );\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport './App.css';\nimport TodoListTask from './TodoListTask/TodoListTask';\n\nconst TodoListTasks = ({tasks, changeStatus, deleteTask, todoListId, changeTitle}) => {\n    const tasksElements = tasks.map(t => <TodoListTask changeStatus={changeStatus}\n        changeTitle={changeTitle} deleteTask={deleteTask}\n        todoListId={todoListId}\n         key={t.id} task={t}/>)\n    return (\n        <div className=\"todoList-tasks\">\n            {tasksElements}\n        </div>\n    );\n}\n\nexport default TodoListTasks;\n\n","import React, { useState } from 'react';\nimport './App.css';\n\nconst TodoListFooter = ({ filterValue, setFilterValue }) => {\n    const [isHidden, setIsHidden] = useState(false)\n\n\n    let classForAll = filterValue === \"All\" ? \"filter-active\" : \"\";\n    let classForCompleted = filterValue === \"Completed\" ? \"filter-active\" : \"\";\n    let classForActive = filterValue === \"Active\" ? \"filter-active\" : \"\";\n    return (\n        <div className=\"todoList-footer\">\n            {!isHidden && <>\n                <button className={classForAll} onClick={() => setFilterValue('All')}>All</button>\n                <button className={classForCompleted} onClick={() => setFilterValue('Completed')}>Completed</button>\n                <button className={classForActive} onClick={() => setFilterValue('Active')}>Active</button>\n                <span className='hideButtons' onClick={() => setIsHidden(true)}>hide</span>\n            </>}\n            {isHidden && <span className='hideButtons' onClick={() => setIsHidden(false)}>show</span> }\n        </div>\n    );\n}\n\nexport default TodoListFooter;\n\n","import React from 'react';\nimport './App.css';\n\nconst TodoListTitle = ({ title, deleteTodolist, todoListId }) => {\n    const deleteTodoList = () => {\n        deleteTodolist(todoListId)\n    }\n    return (\n        <div className=\"todoList_header_title\">\n            <h3>{title}</h3>\n            <button onClick={deleteTodoList}>X</button>\n        </div>\n    );\n}\n\nexport default TodoListTitle;\n\n","import React, { useState } from 'react';\nimport './App.css';\n\nconst AddNewItemForm = ({ addItem }) => {\n\n    const [error, setError] = useState(false);\n    const [titleValue, setTitleValue] = useState('');\n\n    const onAddItemClick = () => {\n        let title = titleValue;\n        if (title.trim() !== '') {\n            addItem(title);\n        } else { setError(true) }\n        setTitleValue('');\n    };\n    const onTitleChange = (e) => {\n        setError(false);\n        setTitleValue(e.currentTarget.value);\n    };\n    return (\n        <div className=\"todoList-header\">\n            <div className=\"todoList-newTaskForm\">\n                <input onKeyPress={(e) => { return (e.key === \"Enter\") ? onAddItemClick() : null }}\n                    onChange={onTitleChange}\n                    value={titleValue}\n                    placeholder='New item name'\n                    className={error ? 'error' : null}\n                    type=\"text\" />\n                <button onClick={onAddItemClick}>Add</button>\n            </div>\n        </div>\n    );\n}\n\nexport default AddNewItemForm;\n\n","const SET_TODOLISTS = 'SET_TODOLISTS';\r\nconst ADD_TODOLIST = 'ADD_TODOLIST';\r\nconst DELETE_TODOLIST = 'DELETE_TODOLIST';\r\nconst SET_TASKS = 'SET_TASKS';\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nconst initialState = {\r\n    todolists: [\r\n        // {\r\n        //     id: 0, title: 'monday', tasks: [\r\n        //         { \"id\": 0, \"title\": \"5\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 1, \"title\": \"6\", \"isDone\": true, \"priority\": \"high\" },\r\n        //         { \"id\": 2, \"title\": \"7\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 3, \"title\": \"8\", \"isDone\": false, \"priority\": \"high\" }\r\n        //     ]\r\n        // },\r\n        // {\r\n        //     id: 1, title: 'tuesday', tasks: [\r\n        //         { \"id\": 0, \"title\": \"5\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 1, \"title\": \"6\", \"isDone\": true, \"priority\": \"high\" },\r\n        //         { \"id\": 2, \"title\": \"7\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 3, \"title\": \"8\", \"isDone\": false, \"priority\": \"high\" }\r\n        //     ]\r\n        // },\r\n        // {\r\n        //     id: 2, title: 'wednesday', tasks: [\r\n        //         { \"id\": 0, \"title\": \"5\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 1, \"title\": \"6\", \"isDone\": true, \"priority\": \"high\" },\r\n        //         { \"id\": 2, \"title\": \"7\", \"isDone\": false, \"priority\": \"high\" },\r\n        //         { \"id\": 3, \"title\": \"8\", \"isDone\": false, \"priority\": \"high\" }\r\n        //     ]\r\n        // }\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            let todoLists = action.newState.map((todo) => ({ ...todo, tasks: [] }));\r\n            return {\r\n                ...state, todolists: todoLists\r\n            }\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state, todolists: [action.newTodoList, ...state.todolists]\r\n            }\r\n        case SET_TASKS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return { ...tl, tasks: action.tasks }\r\n                    } else return tl\r\n                })\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return { ...tl, tasks: [action.newTask, ...tl.tasks] }\r\n                    } else return tl\r\n                })\r\n            }\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map( tl => {\r\n                    if(tl.id === action.todolistId) {\r\n                       return {...tl, tasks: tl.tasks.map( t => {\r\n                           if(t.id === action.taskId) {\r\n                               return {...t, ...action.obj}\r\n                           } else return t\r\n                       })}\r\n                    } else return tl\r\n                })\r\n            }\r\n            case DELETE_TODOLIST:\r\n                return {\r\n                    ...state,\r\n                    todolists: state.todolists.filter( tl => {\r\n                        return tl.id !== action.todolistId\r\n                    })\r\n                }\r\n                case DELETE_TASK:\r\n                    return {\r\n                        ...state,\r\n                        todolists: state.todolists.map( tl => {\r\n                            if(tl.id === action.todolistId) {\r\n                                return {\r\n                                    ...tl, tasks: tl.tasks.filter( t => {\r\n                                        return t.id !== action.taskId\r\n                                    })\r\n                                }\r\n                            } else return tl\r\n                        })\r\n                    }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setTodolistsAC = (newState) => ({ type: SET_TODOLISTS, newState })\r\nexport const addTodolistAC = (newTodoList) => ({ type: ADD_TODOLIST, newTodoList })\r\nexport const deleteTodolistAC = (todolistId) => ({ type: DELETE_TODOLIST, todolistId })\r\nexport const setTasksAC = (todolistId, tasks) => ({ type: SET_TASKS, todolistId, tasks })\r\nexport const addNewTaskAC = (todolistId, newTask) => ({ type: ADD_TASK, todolistId, newTask })\r\nexport const updateTaskAC = (todolistId, taskId, obj) => ({ type: UPDATE_TASK, todolistId, taskId, obj })\r\nexport const deleteTaskAC = (todolistId, taskId) => ({ type: DELETE_TASK, todolistId, taskId })\r\n\r\nexport default reducer;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TodoListTasks from './TodoListTasks';\nimport TodoListFooter from './TodoListFooter';\nimport TodoListTitle from './TodoListTitle';\nimport AddNewItemForm from './addNewItemForm';\nimport { addNewTaskAC, setTasksAC, updateTaskAC, deleteTaskAC } from '../BLL/reducer';\nimport { connect } from 'react-redux';\n\nconst TodoList = ({ todoListId, deleteTodolist, title,\n    tasks, addNewTask, setTasks, updateTask, deleteTask }) => {\n    let [nextTaskId, setNextTaskId] = useState(1);\n    let [filterValue, setFilterValue] = useState('All');\n    useEffect(() => {\n        restoreState()\n    }, [])\n    useEffect(() => {\n        saveState()\n    }, [tasks])\n    let saveState = () => {\n        let stateAsString = JSON.stringify(tasks)\n        localStorage.setItem('hooksTodolistTasks' + todoListId, stateAsString)\n    }\n    let restoreState = () => {\n        let tasks = []\n        let stateAsString = localStorage.getItem('hooksTodolistTasks' + todoListId)\n        if (stateAsString !== null) {\n            tasks = JSON.parse(stateAsString);\n        }\n        tasks.forEach(t => {\n            if (t.id >= nextTaskId) {\n                setNextTaskId(t.id + 1)\n            }\n        })\n        setTasks(todoListId, tasks)\n    }\n    const addTask = (title) => {\n        let newTask = {\n            id: nextTaskId,\n            title: title,\n            isDone: false,\n            priority: 'high'\n        };\n        addNewTask(todoListId, newTask)\n        setNextTaskId(nextTaskId + 1);\n    }\n    const changeTask = (taskId, obj) => {\n        updateTask(todoListId, taskId, obj)\n    }\n    const changeTitle = (taskId, title) => {\n        changeTask(taskId, { title })\n    }\n    const changeStatus = (taskId, isDone) => {\n        changeTask(taskId, { isDone })\n    }\n    return (\n        <div className='todoList'>\n            <div className='todoList-header'>\n                <TodoListTitle todoListId={todoListId} title={title} deleteTodolist={deleteTodolist}/>\n                <AddNewItemForm addItem={addTask} />\n            </div>\n            <TodoListTasks changeStatus={changeStatus}\n                changeTitle={changeTitle} deleteTask={deleteTask}\n                todoListId={todoListId}\n                tasks={tasks.filter(t => {\n                    switch (filterValue) {\n                        case 'All':\n                            return t;\n                        case 'Completed':\n                            return t.isDone;\n                        case 'Active':\n                            return !t.isDone;\n                        default:\n                            return t;;\n                    }\n                })} />\n            <TodoListFooter setFilterValue={setFilterValue} filterValue={filterValue} />\n        </div>\n    );\n}\n\nconst mdtp = (dispatch) => {\n    return {\n        setTasks: (todoListId, tasks) => {\n            dispatch(setTasksAC(todoListId, tasks))\n        },\n        addNewTask: (todoListId, newTask) => {\n            dispatch(addNewTaskAC(todoListId, newTask))\n        },\n        updateTask: (todoListId, taskId, obj) => {\n            dispatch(updateTaskAC(todoListId, taskId, obj))\n        },\n        deleteTask: (todoListId, taskId) => {\n            dispatch(deleteTaskAC(todoListId, taskId))\n        }      \n    }\n\n}\nconst ConnectedTodoList = connect(null, mdtp)(TodoList)\n\nexport default ConnectedTodoList;\n\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './TodoList.jsx'\nimport AddNewItemForm from './addNewItemForm';\nimport { connect } from 'react-redux';\nimport { addTodolistAC, setTodolistsAC, deleteTodolistAC } from '../BLL/reducer';\n\nconst App = ({todolists, addNewTodoList, deleteTodolist, setTodolists}) => {\n    const [nextTodoListId, setNextTodoListId] = useState(0);\n    useEffect(() => {\n        restoreState()\n    }, [])\n    useEffect(() => {\n        saveState()\n    }, [todolists])\n    const saveState = () => {\n        let stateAsString = JSON.stringify(todolists)\n        localStorage.setItem('hooksTodolist', stateAsString)\n    }\n    const restoreState = () => {\n        let todolists = []\n        let stateAsString = localStorage.getItem('hooksTodolist')\n        if (stateAsString !== null) {\n            todolists = JSON.parse(stateAsString);\n        }\n        todolists.forEach(tl => {\n            if (tl.id >= nextTodoListId) {\n                setNextTodoListId(tl.id + 1)\n            }\n        })\n        setTodolists(todolists)\n    }\n    const addTodoList = (title) => {\n        let newTodoList = {\n            id: nextTodoListId,\n            title: title,\n            tasks: []\n        };\n        addNewTodoList(newTodoList);\n        setNextTodoListId(nextTodoListId + 1);\n    }\n    return (\n        <>\n            <div>\n                <AddNewItemForm addItem={addTodoList}/>\n            </div>\n            <div className=\"App\">\n\n                {todolists.map(tl => <TodoList tasks={tl.tasks}\n                key={tl.id} deleteTodolist={deleteTodolist}\n                todoListId={tl.id} title={tl.title} />)}\n            </div>\n        </>\n    );\n}\nconst mstp = (state) => {\n    return {\n        todolists: state.todolists\n    }\n}\nconst mdtp = (dispatch) => {\n    return {\n        setTodolists: (newState) => {\n            dispatch(setTodolistsAC(newState))\n        },\n        addNewTodoList: (newTodoList) => {\n            dispatch(addTodolistAC(newTodoList))\n        },\n        deleteTodolist: (todoListId) => {\n            dispatch(deleteTodolistAC(todoListId))\n        }\n    }\n\n}\nconst ConnectedApp = connect(mstp, mdtp)(App)\n\nexport default ConnectedApp;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './UI/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './BLL/store';\n\nReactDOM.render(\n    <Provider store={store}><App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}